// TabStops ：$1,$2,$3 ... $0指定代码模块生成后，编辑光标出现位置; 使用 Tab 键进行切换(编辑光标按 $1,$2,$3...$0 的顺序跳转)，$0 是光标最后可切换位置。
// 默认值：可以为光标出现位置添加默认值，${1: placeholder}；也可以有多个默认值 ${1|placeholder, placeholder2|}。
// 变量
// TM_SELECTED_TEXT: 当前选中内容或空字符串
// TM_CURRENT_LINE: 当前行内容
// TM_CURRENT_WORD: 光标处字符或空字符串
// TM_LINE_INDEX: 从0开始的行号
// TM_LINE_NUMBER: 从1开始的行号
// TM_FILENAME: 当前被编辑文档名
// TM_FILENAME_BASE: 当前被编辑文档名，没有后缀
// TM_DIRECTORY: 当前被编辑文档目录
// TM_FILEPATH: 当前被编辑文档全路径
// CLIPBOARD: 当前剪切板内容
// CURRENT_YEAR: 当前年
// CURRENT_YEAR_SHORT: 当前年后两位
// CURRENT_MONTH: 月份，两位数字表示，例如02
// CURRENT_MONTH_NAME: 月份全称，例如 ‘July’
// CURRENT_MONTH_NAME_SHORT: 月份简写 ，例如’Jul
// CURRENT_DATE: 某天
// CURRENT_DAY_NAME: 星期几， 例如’Monday’
// CURRENT_DAY_NAME_SHORT: 星期几的简写， ‘Mon’
// CURRENT_HOUR: 小时，24小时制
// CURRENT_MINUTE: 分钟
// CURRENT_SECOND: 秒数
{
	"Interface definition": {
		"scope": "javascript",
		"prefix": "api",
		"body": [
			"return new Promise((resolve, reject) => {",
					"\tthis.\\$apiDesktop.$1($2)",
					"\t\t.then((response) => {",
					"\t\t\tif (response.code === 'success') {",
					"\t\t\t\tconst res = response.data",
					"\t\t\t\tresolve(res)",
					"\t\t\t}",
					"\t\t}).catch((error) => {",
					"\t\t\tErrorCallBack(error)",
					"\t\t\treject(error)",
					"\t\t})",
			"})"
		],
		"description": "promise接口定义"
	},
	"Window console": {
		"scope": "javascript",
		"prefix": "wlog",
		"body": [
			"window.console.log('$1')"
		],
		"description": "window.console"
	},
	"$alert Reg": {
		"scope": "javascript",
		"prefix": "regA",
		"body": [
			"this.\\$alert(RegConfirm, RegTitle, {",
			"\tconfirmButtonText: 'OK',",
			"\tcenter: true,",
			"\tcloseOnClickModal: false,",
			"\tcallback: () => {",
			"\t\t$1",
      "\t}",
      "})"
		],
		"description": "Element Alert组件 Reg"
	},
	"$alert Update": {
		"scope": "javascript",
		"prefix": "updA",
		"body": [
			"this.\\$alert(Updatefirm, UpdateTitle, {",
			"\tconfirmButtonText: 'OK',",
			"\tcenter: true,",
			"\tcloseOnClickModal: false,",
			"\tcallback: () => {",
			"\t\t$1",
      "\t}",
      "})"
		],
		"description": "Element Alert组件 Update"
	},
	"resetFields": {
		"scope": "javascript",
		"prefix": "rF",
		"body": [
			"this.\\$refs.form.resetFields()",
		],
		"description": "Element Form对整个表单进行重置，将所有字段值重置为初始值并移除校验结果"
	},
	"resetData": {
		"scope": "javascript",
		"prefix": "rD",
		"body": [
			"Object.assign(this.\\$data, this.\\$options.data.call(this))",
		],
		"description": "还原初始化data"
	},
	"resetItem": {
		"scope": "javascript",
		"prefix": "rI",
		"body": [
			"this.$1 = this.\\$options.data.call(this).$2",
		],
		"description": "还原初始化某个变量"
	},
	"importAlert": {
		"scope": "javascript",
		"prefix": "iA",
		"body": [
			"import '@/assets/aos-style/resetAlert.css'",
		],
		"description": "引入自定义Element组件Alert"
	},
	"$routerPush": {
		"scope": "javascript",
		"prefix": "rp",
		"body": [
			"const random = GetRandomAlphaNum()",
      "const params = {$0}",
      "SetPageData('$1', '$2', `initData_\\${random}`, params)",
      "this.$router.push({",
        "\tname: '$3',",
        "\tquery: {",
          "\t\tinitDataNum: random",
        "\t}",
      "})",
		],
		"description": "跳转页面"
	},
}
